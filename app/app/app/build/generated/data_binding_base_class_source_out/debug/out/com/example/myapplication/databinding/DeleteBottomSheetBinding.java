// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeleteBottomSheetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout buttonContainer;

  @NonNull
  public final ButtonBinding cancelButton;

  @NonNull
  public final ButtonBinding deleteButton;

  @NonNull
  public final ImageView deleteIcon;

  @NonNull
  public final TextView description;

  private DeleteBottomSheetBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout buttonContainer, @NonNull ButtonBinding cancelButton,
      @NonNull ButtonBinding deleteButton, @NonNull ImageView deleteIcon,
      @NonNull TextView description) {
    this.rootView = rootView;
    this.buttonContainer = buttonContainer;
    this.cancelButton = cancelButton;
    this.deleteButton = deleteButton;
    this.deleteIcon = deleteIcon;
    this.description = description;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeleteBottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeleteBottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.delete_bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeleteBottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_container;
      LinearLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.cancelButton;
      View cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }
      ButtonBinding binding_cancelButton = ButtonBinding.bind(cancelButton);

      id = R.id.deleteButton;
      View deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }
      ButtonBinding binding_deleteButton = ButtonBinding.bind(deleteButton);

      id = R.id.deleteIcon;
      ImageView deleteIcon = ViewBindings.findChildViewById(rootView, id);
      if (deleteIcon == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      return new DeleteBottomSheetBinding((RelativeLayout) rootView, buttonContainer,
          binding_cancelButton, binding_deleteButton, deleteIcon, description);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
