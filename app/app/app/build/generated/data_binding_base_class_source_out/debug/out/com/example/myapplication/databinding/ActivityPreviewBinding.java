// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPreviewBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ButtonBinding activeButton;

  @NonNull
  public final ButtonBinding iconButton;

  @NonNull
  public final ButtonBinding inactiveButton;

  @NonNull
  public final InputBinding input;

  @NonNull
  public final ButtonBinding navbarButton;

  @NonNull
  public final TextBinding text;

  @NonNull
  public final TextBinding title;

  private ActivityPreviewBinding(@NonNull ScrollView rootView, @NonNull ButtonBinding activeButton,
      @NonNull ButtonBinding iconButton, @NonNull ButtonBinding inactiveButton,
      @NonNull InputBinding input, @NonNull ButtonBinding navbarButton, @NonNull TextBinding text,
      @NonNull TextBinding title) {
    this.rootView = rootView;
    this.activeButton = activeButton;
    this.iconButton = iconButton;
    this.inactiveButton = inactiveButton;
    this.input = input;
    this.navbarButton = navbarButton;
    this.text = text;
    this.title = title;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPreviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPreviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_preview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPreviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.active_button;
      View activeButton = ViewBindings.findChildViewById(rootView, id);
      if (activeButton == null) {
        break missingId;
      }
      ButtonBinding binding_activeButton = ButtonBinding.bind(activeButton);

      id = R.id.icon_button;
      View iconButton = ViewBindings.findChildViewById(rootView, id);
      if (iconButton == null) {
        break missingId;
      }
      ButtonBinding binding_iconButton = ButtonBinding.bind(iconButton);

      id = R.id.inactive_button;
      View inactiveButton = ViewBindings.findChildViewById(rootView, id);
      if (inactiveButton == null) {
        break missingId;
      }
      ButtonBinding binding_inactiveButton = ButtonBinding.bind(inactiveButton);

      id = R.id.input;
      View input = ViewBindings.findChildViewById(rootView, id);
      if (input == null) {
        break missingId;
      }
      InputBinding binding_input = InputBinding.bind(input);

      id = R.id.navbar_button;
      View navbarButton = ViewBindings.findChildViewById(rootView, id);
      if (navbarButton == null) {
        break missingId;
      }
      ButtonBinding binding_navbarButton = ButtonBinding.bind(navbarButton);

      id = R.id.text;
      View text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }
      TextBinding binding_text = TextBinding.bind(text);

      id = R.id.title;
      View title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }
      TextBinding binding_title = TextBinding.bind(title);

      return new ActivityPreviewBinding((ScrollView) rootView, binding_activeButton,
          binding_iconButton, binding_inactiveButton, binding_input, binding_navbarButton,
          binding_text, binding_title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
