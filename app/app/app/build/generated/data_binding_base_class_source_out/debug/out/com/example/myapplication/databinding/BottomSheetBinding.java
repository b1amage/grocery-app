// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout bottomSheet;

  @NonNull
  public final TextView categoryTag;

  @NonNull
  public final ImageButton detailDistance;

  @NonNull
  public final RelativeLayout detailDistanceCtn;

  @NonNull
  public final TextView detailItemDsc;

  @NonNull
  public final ImageButton detailRating;

  @NonNull
  public final RelativeLayout detailRatingCtn;

  @NonNull
  public final TextView itemDetailName;

  @NonNull
  public final RelativeLayout statCtn;

  private BottomSheetBinding(@NonNull RelativeLayout rootView, @NonNull RelativeLayout bottomSheet,
      @NonNull TextView categoryTag, @NonNull ImageButton detailDistance,
      @NonNull RelativeLayout detailDistanceCtn, @NonNull TextView detailItemDsc,
      @NonNull ImageButton detailRating, @NonNull RelativeLayout detailRatingCtn,
      @NonNull TextView itemDetailName, @NonNull RelativeLayout statCtn) {
    this.rootView = rootView;
    this.bottomSheet = bottomSheet;
    this.categoryTag = categoryTag;
    this.detailDistance = detailDistance;
    this.detailDistanceCtn = detailDistanceCtn;
    this.detailItemDsc = detailItemDsc;
    this.detailRating = detailRating;
    this.detailRatingCtn = detailRatingCtn;
    this.itemDetailName = itemDetailName;
    this.statCtn = statCtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout bottomSheet = (RelativeLayout) rootView;

      id = R.id.category_tag;
      TextView categoryTag = ViewBindings.findChildViewById(rootView, id);
      if (categoryTag == null) {
        break missingId;
      }

      id = R.id.detail_distance;
      ImageButton detailDistance = ViewBindings.findChildViewById(rootView, id);
      if (detailDistance == null) {
        break missingId;
      }

      id = R.id.detail_distance_ctn;
      RelativeLayout detailDistanceCtn = ViewBindings.findChildViewById(rootView, id);
      if (detailDistanceCtn == null) {
        break missingId;
      }

      id = R.id.detail_item_dsc;
      TextView detailItemDsc = ViewBindings.findChildViewById(rootView, id);
      if (detailItemDsc == null) {
        break missingId;
      }

      id = R.id.detail_rating;
      ImageButton detailRating = ViewBindings.findChildViewById(rootView, id);
      if (detailRating == null) {
        break missingId;
      }

      id = R.id.detail_rating_ctn;
      RelativeLayout detailRatingCtn = ViewBindings.findChildViewById(rootView, id);
      if (detailRatingCtn == null) {
        break missingId;
      }

      id = R.id.item_detail_name;
      TextView itemDetailName = ViewBindings.findChildViewById(rootView, id);
      if (itemDetailName == null) {
        break missingId;
      }

      id = R.id.stat_ctn;
      RelativeLayout statCtn = ViewBindings.findChildViewById(rootView, id);
      if (statCtn == null) {
        break missingId;
      }

      return new BottomSheetBinding((RelativeLayout) rootView, bottomSheet, categoryTag,
          detailDistance, detailDistanceCtn, detailItemDsc, detailRating, detailRatingCtn,
          itemDetailName, statCtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
