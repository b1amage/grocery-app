// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateItemFormBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout inputItemImage;

  @NonNull
  public final LinearLayout inputItemName;

  @NonNull
  public final LinearLayout inputItemPrice;

  @NonNull
  public final EditText inputItemText;

  @NonNull
  public final EditText inputPriceText;

  @NonNull
  public final LinearLayout inputShopName;

  @NonNull
  public final EditText inputShopText;

  @NonNull
  public final ActionBarBinding itemFormActionBar;

  @NonNull
  public final ButtonBinding submitButton;

  @NonNull
  public final ImageButton uploadImageButton;

  private ActivityCreateItemFormBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout inputItemImage, @NonNull LinearLayout inputItemName,
      @NonNull LinearLayout inputItemPrice, @NonNull EditText inputItemText,
      @NonNull EditText inputPriceText, @NonNull LinearLayout inputShopName,
      @NonNull EditText inputShopText, @NonNull ActionBarBinding itemFormActionBar,
      @NonNull ButtonBinding submitButton, @NonNull ImageButton uploadImageButton) {
    this.rootView = rootView;
    this.inputItemImage = inputItemImage;
    this.inputItemName = inputItemName;
    this.inputItemPrice = inputItemPrice;
    this.inputItemText = inputItemText;
    this.inputPriceText = inputPriceText;
    this.inputShopName = inputShopName;
    this.inputShopText = inputShopText;
    this.itemFormActionBar = itemFormActionBar;
    this.submitButton = submitButton;
    this.uploadImageButton = uploadImageButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateItemFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateItemFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_item_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateItemFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.inputItemImage;
      LinearLayout inputItemImage = ViewBindings.findChildViewById(rootView, id);
      if (inputItemImage == null) {
        break missingId;
      }

      id = R.id.inputItemName;
      LinearLayout inputItemName = ViewBindings.findChildViewById(rootView, id);
      if (inputItemName == null) {
        break missingId;
      }

      id = R.id.inputItemPrice;
      LinearLayout inputItemPrice = ViewBindings.findChildViewById(rootView, id);
      if (inputItemPrice == null) {
        break missingId;
      }

      id = R.id.inputItemText;
      EditText inputItemText = ViewBindings.findChildViewById(rootView, id);
      if (inputItemText == null) {
        break missingId;
      }

      id = R.id.inputPriceText;
      EditText inputPriceText = ViewBindings.findChildViewById(rootView, id);
      if (inputPriceText == null) {
        break missingId;
      }

      id = R.id.inputShopName;
      LinearLayout inputShopName = ViewBindings.findChildViewById(rootView, id);
      if (inputShopName == null) {
        break missingId;
      }

      id = R.id.inputShopText;
      EditText inputShopText = ViewBindings.findChildViewById(rootView, id);
      if (inputShopText == null) {
        break missingId;
      }

      id = R.id.itemFormActionBar;
      View itemFormActionBar = ViewBindings.findChildViewById(rootView, id);
      if (itemFormActionBar == null) {
        break missingId;
      }
      ActionBarBinding binding_itemFormActionBar = ActionBarBinding.bind(itemFormActionBar);

      id = R.id.submitButton;
      View submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }
      ButtonBinding binding_submitButton = ButtonBinding.bind(submitButton);

      id = R.id.uploadImageButton;
      ImageButton uploadImageButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadImageButton == null) {
        break missingId;
      }

      return new ActivityCreateItemFormBinding((LinearLayout) rootView, inputItemImage,
          inputItemName, inputItemPrice, inputItemText, inputPriceText, inputShopName,
          inputShopText, binding_itemFormActionBar, binding_submitButton, uploadImageButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
