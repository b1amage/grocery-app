// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewPasswordAcitivtyBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton buttonGoback;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final TextInputLayout confirmPassword;

  @NonNull
  public final TextInputEditText edittextConfirmPassword;

  @NonNull
  public final TextInputLayout edittextPassword;

  @NonNull
  public final LinearLayout resetPassword;

  @NonNull
  public final TextView textConfirmNewPassword;

  @NonNull
  public final TextView textCreate;

  @NonNull
  public final TextView textNewpassword;

  private ActivityNewPasswordAcitivtyBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton buttonGoback, @NonNull Button buttonSave,
      @NonNull TextInputLayout confirmPassword, @NonNull TextInputEditText edittextConfirmPassword,
      @NonNull TextInputLayout edittextPassword, @NonNull LinearLayout resetPassword,
      @NonNull TextView textConfirmNewPassword, @NonNull TextView textCreate,
      @NonNull TextView textNewpassword) {
    this.rootView = rootView;
    this.buttonGoback = buttonGoback;
    this.buttonSave = buttonSave;
    this.confirmPassword = confirmPassword;
    this.edittextConfirmPassword = edittextConfirmPassword;
    this.edittextPassword = edittextPassword;
    this.resetPassword = resetPassword;
    this.textConfirmNewPassword = textConfirmNewPassword;
    this.textCreate = textCreate;
    this.textNewpassword = textNewpassword;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewPasswordAcitivtyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewPasswordAcitivtyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_password_acitivty, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewPasswordAcitivtyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_goback;
      ImageButton buttonGoback = ViewBindings.findChildViewById(rootView, id);
      if (buttonGoback == null) {
        break missingId;
      }

      id = R.id.button_save;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.confirmPassword;
      TextInputLayout confirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (confirmPassword == null) {
        break missingId;
      }

      id = R.id.edittext_confirmPassword;
      TextInputEditText edittextConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (edittextConfirmPassword == null) {
        break missingId;
      }

      id = R.id.edittext_password;
      TextInputLayout edittextPassword = ViewBindings.findChildViewById(rootView, id);
      if (edittextPassword == null) {
        break missingId;
      }

      id = R.id.reset_password;
      LinearLayout resetPassword = ViewBindings.findChildViewById(rootView, id);
      if (resetPassword == null) {
        break missingId;
      }

      id = R.id.text_confirmNewPassword;
      TextView textConfirmNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (textConfirmNewPassword == null) {
        break missingId;
      }

      id = R.id.text_create;
      TextView textCreate = ViewBindings.findChildViewById(rootView, id);
      if (textCreate == null) {
        break missingId;
      }

      id = R.id.text_newpassword;
      TextView textNewpassword = ViewBindings.findChildViewById(rootView, id);
      if (textNewpassword == null) {
        break missingId;
      }

      return new ActivityNewPasswordAcitivtyBinding((RelativeLayout) rootView, buttonGoback,
          buttonSave, confirmPassword, edittextConfirmPassword, edittextPassword, resetPassword,
          textConfirmNewPassword, textCreate, textNewpassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
